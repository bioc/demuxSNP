detach("package:VariantAnnotation", unload = TRUE)
detach("package:SummarizedExperiment", unload = TRUE)
library(SingleCellExperiment)
count(SNPsce)
counts(SNPsce)
load("C:/Users/michael.lynch/Documents/snps_data.RData")
counts(SNPsce)
library(devtools)
load_all
load_all()
consensus_calls(SNPsce)
sce2<-consensus_calls(SNPsce)
CiteFuse::crossSampleDoublets(SNPsce)$crossSampleDoublets
load_all()
sce2<-consensus_calls(SNPsce)
result<-CiteFuse::crossSampleDoublets(SNPsce)
SNPsce<-CiteFuse::crossSampleDoublets(SNPsce)
result2<-CiteFuse::crossSampleDoublets(SNPsce)
result2$doubletClassify_between_label
rm(result)
rm(result2)
rm(sce2)
SNPsce$doubletClassify_between_label
SNPsce$doubletClassify_between_class<-NULL
SNPsce$doubletClassify_between_label<-NULL
consensus_calls(SNPsce)
sce<-SNPsce
result<-CiteFuse::crossSampleDoublets(sce)
sce$citefuse<-result$doubletClassify_between_label
library(devtools)
load_all
load_all()
consensus_calls(SNPsce)
SNPsce<-consensus_calls(SNPsce)
SNPsce$citefuse
SNPseurat<-as.Seurat(SNPsce)
library(Seurat)
SNPseurat<-as.Seurat(SNPsce)
sessionInfo()
install.packages("Seurat")
install.packages("Seurat")
library(Seurat)
SNPseurat<-as.Seurat(SNPsce)
install.packages("Matrix")
install.packages("Matrix")
detach("package:Biobase", unload = TRUE)
detach("package:BiocGenerics", unload = TRUE)
detach("package:Biostrings", unload = TRUE)
detach("package:Rsamtools", unload = TRUE)
detach("package:VariantAnnotation", unload = TRUE)
detach("package:Rsamtools", unload = TRUE)
install.packages("Matrix")
detach(Matrix)
detach("Matrix")
?detach
detach("package:BiocGenerics", unload = TRUE)
detach("package:Biostrings", unload = TRUE)
detach("package:datasets", unload = TRUE)
detach("package:GenomeInfoDb", unload = TRUE)
detach("package:GenomicRanges", unload = TRUE)
detach("package:MatrixGenerics", unload = TRUE)
detach("package:SummarizedExperiment", unload = TRUE)
detach("package:SingleCellExperiment", unload = TRUE)
detach("package:SummarizedExperiment", unload = TRUE)
detach("package:GenomicRanges", unload = TRUE)
getwd()
load_all
load_all()
library(devtools)
load_all()
load("C:/Users/michael.lynch/Desktop/snps.RData")
test.sce<-snps.sce
test.sce<-consensus_calls(test.sce)
?altExp
load_all()
test.sce<-consensus_calls(test.sce)
test.sce$predict
test.sce$citefuse
test.sce<-add_snps(test.sce,snps.mat)
?SingleCellExperiment
?colnames
load_all()
test.sce<-add_snps(test.sce,snps.mat)
dim(snps.mat)
load_all()
test.sce<-add_snps(test.sce,snps.mat)
mat<-snps.mat
#add_snps<-function(sce,mat,thresh=0.8) {
mat_obs<-mat[rowSums(mat)/dim(mat)[2]>thresh]
thresh<-0.8
#add_snps<-function(sce,mat,thresh=0.8) {
mat_obs<-mat[rowSums(mat)/dim(mat)[2]>thresh]
se<-SingleCellExperiment::SingleCellExperiment(list(counts=mat_obs))
dim(mat_obs)
as.mat(mat_obs)
as.matrix(mat_obs)
dim(as.matrix(mat_obs))
rowSums(mat)
rowSums(mat)/dim(mat)[2]
rowSums(mat)/dim(mat)[1]
rowSums(mat>0)/dim(mat)[1]
rowSums(mat>0)/dim(mat)[2]
#add_snps<-function(sce,mat,thresh=0.8) {
mat_obs<-mat[(rowSums(mat>0)/dim(mat)[2]) > thresh]
dim(mat_obs)
#add_snps<-function(sce,mat,thresh=0.8) {
mat_obs<-mat[(rowSums(mat>0)/dim(mat)[2]) > thresh,]
dim(mat_obs)
#add_snps<-function(sce,mat,thresh=0.8) {
mat_obs<-mat[(rowSums(mat>0)/dim(mat)[2]) > thresh,]
se<-SingleCellExperiment::SingleCellExperiment(list(counts=mat_obs))
colnames(se)<-colnames(sce)
load_all()
test.sce<-add_snps(test.sce)
test.sce<-add_snps(test.sce,snps.mat)
test.sce
altExp(test.sce,"SNP")
SingleCellExperiment::altExp(test.sce,"SNP")
use_vignette("my-vignette")
load_all()
check()
?counts
subset_vcf(vcf,snps.sce)
subset_vcf(vcf,snps.sce)
EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86
subset_vcf(vcf,snps.sce)
EnsDb.Hsapiens.v86
EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86
load_all()
subset_vcf(vcf,snps.sce)
check()
use_package("CiteFuse")
use_package("Seurat")
use_package("class")
use_package("EnsDb.Hsapiens.v86")
load_all()
check()
check()
library(devtools)
check()
check()
check()
library(SNPcheck)
load("cells_x_snps.rda")
load("data/cells_x_snps.rda")
getwd()
load("../data/cells_x_snps.rda")
library(devtools)
install()
TRue
library(SNPcheck)
library(devtools)
load_all()
install()
library(devtools)
load_all()
install()
library(devtools)
load("snps_files.RData")
load("C:/Users/michael.lynch/Documents/snps_files.RData")
library(devtools)
load_all()
sce<-consensus_calls(sce)
sce$predict
sce<-add_snps(sce,cells_x_snps)
sce
counts(altExp(sce,"SNP"))
libraty(SingleCellExpeirment)
library(SingleCellExpeirment)
library(SingleCellExperiment)
counts(altExp(sce,"SNP"))
counts(altExp(sce,"SNP"))[1:4,1:4]
?reassign
x<-'knn'
x<-'orig.ident'
sce$'x'
sce$x
sce$"x"
sce$orig.ident
sce$'x'
dittoDimPlot
library(dittoSeq)
dittoPlot
library(devtools)
load_all()
sce<-reassign(sce)
train<-as.data.frame(t(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"SNP"))[,sce$train==TRUE]))
pred<-as.data.frame(t(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"SNP"))[,sce$train==FALSE]))
pred<-as.data.frame(t(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"SNP"))[,sce$predict==TRUE]))
set.seed(seed)
seed<-1
set.seed(seed)
ID<-class::knn(train,pred,k=10,sce$citefuse[sce$train==TRUE])
sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-ID
table(sce$knn)
sce<-reassign(sce)
load_all()
sce<-reassign(sce)
sce$knn
table(sce$knn)
sce$citefuse
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-ID
sce$knn
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-factor(ID)
sce$knn
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-factor(ID,levels=levels(ID))
sce$knn
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID,levels=levels(ID))
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID)
sce$knn
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID)
ID
class(ID)
levels(ID)
class(sce$knn)
sce$knn<-NULL
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID)
class(sce$knn)
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn<-as.factor(ID)
class(sce$knn)
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID)
class(sce$knn)
sce$knn<-NULL
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn[sce$predict==TRUE]<-as.factor(ID)
class(sce$knn)
sce$knn
#sce$knn[1:length(colnames(sce))]<-"unknown"
sce$knn<-as.factor(ID)
class(sce$knn)
library(devtools)
load_all
load_all()
sce<-reassign(sce)
table(sce$knn)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE)
library(ComplexHeatmap)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE)
colors = structure(viridis(n=3), names = c("-1","-3", "1"))
library(viridisLite)
colors = structure(viridis(n=3), names = c("-1","-3", "1"))
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,col=colors)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,col=colors,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,col=colors,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,col=colors,cluster_column_slices = FALSE)
colors
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce[,sce$knn="Hashtag2"],"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce[,sce$knn=="Hashtag2"],"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce[,sce$knn=="Hashtag2"],"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce[,sce$knn=="Hashtag2"]$knn,cluster_column_slices = FALSE)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=FALSE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE,col=colors)
Heatmap(counts(altExp(sce,"SNP")),cluster_rows=FALSE,cluster_columns=TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = sce$knn,cluster_column_slices = FALSE,col=colors)
table(sce$knn,sce$seurat)
table(sce$knn,sce$citefuse)
colSum(broad.sce)
library(SingleCellExperiment)
colSums(counts(broad.sce))
colSums(counts(sce))
rna<-colSums(counts(sce))
snp<-colSums(counts(altExp(sce,"SNP")))
plot(rna,snp)
snp<-colSums(counts(altExp(sce,"SNP"))>0)
plot(rna,snp)
rna<-colSums(logcounts(sce))
plot(rna,snp)
rna<-colSums(counts(sce))
plot(rna,snp)
snp<-colSums(counts(altExp(sce,"SNP"))!=0)
plot(rna,snp)
table(rna<1000)
table(rna<1000,snp<20)
table(rna<1000,snp<40)
table(rna<2000,snp<40)
hist(snp)
table(snps<40)
table(snp<40)
table(snp<20)
counts(altExp(sce,"SNP"))
counts(altExp(sce,"SNP"))[,1]
counts(altExp(sce,"SNP"))[,2]
counts(altExp(sce,"SNP"))[,2] | counts(altExp(sce,"SNP"))[,3]
counts(altExp(sce,"SNP"))[,2]==1 | counts(altExp(sce,"SNP"))[,3]==1
Heatmap(counts(altExp(sce,"SNP"))[,2]==1 | counts(altExp(sce,"SNP"))[,3]==1)
counts(altExp(sce,"SNP"))[,2]==1 | counts(altExp(sce,"SNP"))[,3]==1
sum(counts(altExp(sce,"SNP"))[,2]==1 | counts(altExp(sce,"SNP"))[,3]==1)
sum(counts(altExp(sce,"SNP"))[,2]==1 | counts(altExp(sce,"SNP"))[,3]==1)
sum(counts(altExp(sce,"SNP"))[,2]==1)
sum(counts(altExp(sce,"SNP"))[,3]==1)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,1]))
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,2]))
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,2]),cluster_rows = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,3]),cluster_rows = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,2]),cluster_rows = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,3]),cluster_rows = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,c(2,3)]),cluster_rows = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,c(2,3)]),cluster_rows = FALSE,show_row_names = FALSE)
Heatmap(as.matrix(counts(altExp(sce,"SNP"))[,c(2,3)]),cluster_rows = FALSE,show_column_names = FALSE)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-consensus_calls(sce)
library(devtools)
load_all()
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-consensus_calls(sce)
sce<-add_snps(sce,cells_x_snps)
train<-counts(altExp(sce,"SNP"))[,sce$intersect==TRUE & sce$citefuse_class=="Singlet" & sce$seurat_class=="Singlet"]
#library(SNPcheck)
library(SingleCellExperiment)
train<-counts(altExp(sce,"SNP"))[,sce$intersect==TRUE & sce$citefuse_class=="Singlet" & sce$seurat_class=="Singlet"]
train<-train[,colSums(train!=0)>50]
labels<-sce$citefuse[colnames(sce) %in% colnames(train)]
colnames(train)<-labels
dim(train)
library(ComplexHeatmap)
Heatmap(train,cluster_rows = FALSE,cluster_columns = TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = labels,cluster_column_slices = FALSE)
Heatmap(train[,labels=="Hashtag4"],cluster_columns = TRUE,cluster_rows = FALSE,show_column_names = FALSE)
labels<-droplevels(labels)
combs<-expand.grid(levels(labels),levels(labels))
combs
length(combs)
dim(combs)[1]
combs<-combs[combs$Var1!=combs$Var2,]
combs
combs2<-paste0(combs$Var1,combs$Var2)
Hashtag1<-train[,labels=="Hashtag1"]
Hashtag2<-train[,labels=="Hashtag2"]
Hashtag3<-train[,labels=="Hashtag3"]
Hashtag4<-train[,labels=="Hashtag4"]
Hashtag5<-train[,labels=="Hashtag5"]
#########
all<-c()
for (i in 1:length(combs2)) {
l1<-as.character(combs$Var1[i])
l2<-as.character(combs$Var2[i])
d1<-train[,labels==l1]
d2<-train[,labels==l2]
s1<-sample(1:dim(d1)[2],100)
s2<-sample(1:dim(d2)[2],100)
doubs<-d1[,s1]==1 | d2[,s2]==1
doubs<-doubs*1
doubs[doubs==0]<-c(-1)
colnames(doubs)<-rep("Doublet",length(colnames(doubs)))#rep(paste0(l1,l2),length(colnames(doubs)))
all<-cbind(all,doubs)
}
dim(all)
#Heatmap(doubs,cluster_rows=FALSE,cluster_columns = TRUE)
train_all<-cbind(train,all)
test<-counts(altExp(sce,"SNP"))
library(class)
ID<-knn(t(train_all),t(test),colnames(train_all))
table(ID,sce$citefuse)
sce$knn_doub<-ID
table(sce$knn_doub)
Heatmap(test[,sce$knn_doub=="Hashtag2"])
Heatmap(test[,sce$knn_doub=="Hashtag2"],show_column_names = FALSE)
Heatmap(test[,sce$knn_doub=="Hashtag2"],show_column_names = FALSE,cluster_rows = FALSE)
Heatmap(test[,sce$knn_doub=="Doublet"],show_column_names = FALSE,cluster_rows = FALSE)
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE)
Heatmap(test[,],show_column_names = FALSE,cluster_rows = FALSE)
Heatmap(test[,],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$knn_doub)
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$citefuse[,sce$knn_doub=="Hashtag1"])
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$citefuse[sce$knn_doub=="Hashtag1"])
sce<-sce[,sce$nCount_RNA>1000]
sce
sce<-consensus_calls(sce)
library(SingleCellExperiment)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-sce[,sce$nCount_RNA>1000]
sce
sce<-consensus_calls(sce)
sce<-add_snps(sce,cells_x_snps)
#library(SNPcheck)
library(SingleCellExperiment)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-consensus_calls(sce)
sce<-add_snps(sce,cells_x_snps)
sce<-sce[,sce$nCount_RNA>1000]
sce
train<-counts(altExp(sce,"SNP"))[,sce$intersect==TRUE & sce$citefuse_class=="Singlet" & sce$seurat_class=="Singlet"]
train<-train[,colSums(train!=0)>50]
labels<-sce$citefuse[colnames(sce) %in% colnames(train)]
colnames(train)<-labels
dim(train)
library(ComplexHeatmap)
Heatmap(train,cluster_rows = FALSE,cluster_columns = TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = labels,cluster_column_slices = FALSE)
Heatmap(train[,labels=="Hashtag4"],cluster_columns = TRUE,cluster_rows = FALSE,show_column_names = FALSE)
labels<-droplevels(labels)
combs<-expand.grid(levels(labels),levels(labels))
combs
length(combs)
dim(combs)[1]
combs<-combs[combs$Var1!=combs$Var2,]
combs
combs2<-paste0(combs$Var1,combs$Var2)
Hashtag1<-train[,labels=="Hashtag1"]
Hashtag2<-train[,labels=="Hashtag2"]
Hashtag3<-train[,labels=="Hashtag3"]
Hashtag4<-train[,labels=="Hashtag4"]
Hashtag5<-train[,labels=="Hashtag5"]
#########
all<-c()
for (i in 1:length(combs2)) {
l1<-as.character(combs$Var1[i])
l2<-as.character(combs$Var2[i])
d1<-train[,labels==l1]
d2<-train[,labels==l2]
s1<-sample(1:dim(d1)[2],100)
s2<-sample(1:dim(d2)[2],100)
doubs<-d1[,s1]==1 | d2[,s2]==1
doubs<-doubs*1
doubs[doubs==0]<-c(-1)
colnames(doubs)<-rep("Doublet",length(colnames(doubs)))#rep(paste0(l1,l2),length(colnames(doubs)))
all<-cbind(all,doubs)
}
dim(all)
#Heatmap(doubs,cluster_rows=FALSE,cluster_columns = TRUE)
train_all<-cbind(train,all)
test<-counts(altExp(sce,"SNP"))
library(class)
ID<-knn(t(train_all),t(test),colnames(train_all))
table(ID,sce$citefuse)
sce$knn_doub<-ID
Heatmap(test[,],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$knn_doub)
sce
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$knn_doub[sce$citefuse=="Hashtag2"])
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$citefuse[sce$knn_doub=="Hashtag2"])
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$citefuse[sce$knn_doub=="Hashtag1"])
library(dittoSeq)
dittoPlot(sce,nCount_RNA)
sce$nCount_RNA[1]
dittoPlot(sce,sce$nCount_RNA)
dittoPlot(sce,sce$nCount_RNA,group.by="orig.ident")
Feature
dittoPlot(sce,sce$nFeature_RNA,group.by="orig.ident")
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-consensus_calls(sce)
sce<-add_snps(sce,cells_x_snps)
sce<-sce[,sce$nFeature_RNA>1000]
sce
train<-counts(altExp(sce,"SNP"))[,sce$intersect==TRUE & sce$citefuse_class=="Singlet" & sce$seurat_class=="Singlet"]
train<-train[,colSums(train!=0)>50]
labels<-sce$citefuse[colnames(sce) %in% colnames(train)]
colnames(train)<-labels
dim(train)
library(ComplexHeatmap)
Heatmap(train,cluster_rows = FALSE,cluster_columns = TRUE,show_row_names = FALSE,show_column_names = FALSE,column_split = labels,cluster_column_slices = FALSE)
Heatmap(train[,labels=="Hashtag4"],cluster_columns = TRUE,cluster_rows = FALSE,show_column_names = FALSE)
labels<-droplevels(labels)
combs<-expand.grid(levels(labels),levels(labels))
combs
length(combs)
dim(combs)[1]
combs<-combs[combs$Var1!=combs$Var2,]
combs
combs2<-paste0(combs$Var1,combs$Var2)
Hashtag1<-train[,labels=="Hashtag1"]
Hashtag2<-train[,labels=="Hashtag2"]
Hashtag3<-train[,labels=="Hashtag3"]
Hashtag4<-train[,labels=="Hashtag4"]
Hashtag5<-train[,labels=="Hashtag5"]
#########
all<-c()
for (i in 1:length(combs2)) {
l1<-as.character(combs$Var1[i])
l2<-as.character(combs$Var2[i])
d1<-train[,labels==l1]
d2<-train[,labels==l2]
s1<-sample(1:dim(d1)[2],100)
s2<-sample(1:dim(d2)[2],100)
doubs<-d1[,s1]==1 | d2[,s2]==1
doubs<-doubs*1
doubs[doubs==0]<-c(-1)
colnames(doubs)<-rep("Doublet",length(colnames(doubs)))#rep(paste0(l1,l2),length(colnames(doubs)))
all<-cbind(all,doubs)
}
dim(all)
#Heatmap(doubs,cluster_rows=FALSE,cluster_columns = TRUE)
train_all<-cbind(train,all)
test<-counts(altExp(sce,"SNP"))
library(class)
ID<-knn(t(train_all),t(test),colnames(train_all))
table(ID,sce$citefuse)
sce$knn_doub<-ID
Heatmap(test[,],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$knn_doub)
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$citefuse[sce$knn_doub=="Hashtag1"])
table(sce$knn_doub)
table(sce$seurat,sce$knn_doub)
Heatmap(test[,sce$knn_doub=="Hashtag1"],show_column_names = FALSE,cluster_rows = FALSE,column_split = sce$seurat[sce$knn_doub=="Hashtag1"])
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocCheck")
library(Seurat)
?as.SingleCellExperiment
sce$ident<-NULL
seurat<-as.Seurat(sce)
altExp(sce,"SNP")<-NULL
sce
seurat<-as.Seurat(sce)
sce2<-as.SingleCellExperiment(seurat)
