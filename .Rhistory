BiocManager::install("CiteFuse")
remove.packages("propr")
BiocManager::install("CiteFuse")
library(CiteFuse)
BiocManager::install("VariantAnnotation")
library(VariantAnnotation)
library(devtools)
check()
check()
document()
document()
document()
document()
library(CiteFuse)
library(CiteFuse)
library(CiteFuse,include.only='crossSampleDoublets')
library(devtools)
use_package("demuxmix")
sce
load()
load_all()
sce
sce<-consensus_calls(sce = sce)
sce<-sce
?colSums
hto<-rowSums(SingleCellExperiment::counts(altExp(sce,"HTO")))
hto<-rowSums(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO")))
hto<-rowSums(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO")))
counts(altExp(sce))
library(SingleCellExperiment)
counts(altExp(sce))
rowSums(counts(altExp(sce)))
hto<-rowSums(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO")))
hto<-colSums(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO"))>0)
library(devtools)
load_all()
sce<-consensus_calls(sce)
load_all()
sce<-consensus_calls(sce)
load_all()
sce<-consensus_calls(sce)
use_package("BiocGenerics")
load_all()
sce<-consensus_calls(sce)
load_all()
sce<-consensus_calls(sce)
counts(sce)>0
colSums(counts(sce)>0)
load_all()
colSums(counts(sce)>0)
sce<-consensus_calls(sce)
rna<-BiocGenerics::colSums(SingleCellExperiment::counts(sce)>0)
hto<-SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO"))
dmm <- demuxmix::demuxmix(hto, rna = rna)
?as.matrix
hto<-as.matrix(SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"HTO")))
dmm <- demuxmix::demuxmix(hto, rna = rna)
sce<-consensus_calls(sce)
load_all()
sce<-consensus_calls(sce)
sce$train
sum(sce$train))
sum(sce$train)
demuxmix::pAcpt(dmm)<-0.95
classes <- demuxmix::dmmClassify(dmm)
classes$Type
load_all()
sce<-consensus_calls(sce)
sce$train
sum(sce$train)
?rep
sce$predict<-rep(TRUE,length(sce$train))
sce$predict
load_all()
check()
load_all()
load_all()
load_all()
check()
install()
check()
library(SNPcheck)
reassign
sce
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
#  %\VignetteEncoding{UTF-8}
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
library(dittoSeq)
library(ggpubr)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
load("../Data/sce.rda")
load("../Data/snps.rda")
load("../Data/vcf.rda")
htos<-as.data.frame(t(logcounts(altExp(sce,"HTO"))))
x1<-gghistogram(htos,x="Hashtag1",fill =dittoColors(1)[1],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x2<-gghistogram(htos,x="Hashtag2",fill =dittoColors(1)[2],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x3<-gghistogram(htos,x="Hashtag3",fill =dittoColors(1)[3],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x4<-gghistogram(htos,x="Hashtag4",fill =dittoColors(1)[4],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x5<-gghistogram(htos,x="Hashtag5",fill =dittoColors(1)[5],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x6<-gghistogram(htos,x="Hashtag6",fill =dittoColors(1)[6],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
ggarrange(x1,x2,x3,x4,x5,x6,align="hv",ncol=3,nrow=2)
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,top_genes = top_genes)
sce$ident<-NULL
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
altExp(sce,"SNP")
load("../Data/sce.rda")
load("../Data/snps.rda")
load("../Data/vcf.rda")
load("../Data/sce.rda")
load("../Data/snps.rda")
load("../Data/vcf.rda")
sce
dim(snps)
sce$ident<-NULL
sce<-consensus_calls(sce)
sce
sce<-add_snps(sce,snps)
sce
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
#Singlet training data
train<-SingleCellExperiment::counts(SingleCellExperiment::altExp(sce,"SNP"))[,sce$train==TRUE]
labels<-sce$labels[train_cells==TRUE]
train_cells=sce$train
labels<-sce$labels[train_cells==TRUE]
load_all()
check()
load_all()
check()
check()
check()
load_all()
check()
check()
install()
load_all()
remove.packages("VariantAnnotation")
BiocManager::install("VariantAnnotation")
check()
library(devtools)
load_all()
use_r(data())
use_r(data
)
use_r("data")
load_all()
check()
load_all()
check()
load_all()
?sce
check()
/%within%
?%within%
?overlapsAny
load_all()
check()
load_all()
check()
data()
sce<-sce
vcf<-vcf
top_genes<-common_genes(sce)
my_vcf<-vcf
#my_vcf<-VariantAnnotation::readVcf('full.vcf',"GRCh38")
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges<-gns[gns$gene_name %in% top_genes]
top_gene_ranges
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
top_genes_vcf<-my_vcf_inbound[GenomicRanges::findOverlaps(SNP_ranges_inbound, top_gene_ranges,type="within")]#[SNP_ranges_inbound %within% top_gene_ranges]
findOverlaps(SNP_ranges_inbound, top_gene_ranges,type="within")]
findOverlaps(SNP_ranges_inbound, top_gene_ranges,type="within")
library(GenomicFeatures)
findOverlaps(SNP_ranges_inbound, top_gene_ranges,type="within")
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]#[SNP_ranges_inbound %within% top_gene_ranges]
check()
# load("../Data/sce.rda")
# load("../Data/snps.rda")
# load("../Data/vcf.rda")
sce<-sce
vcf<-vcf
snps<-snps
check()
load("C:/Users/michael.lynch/Documents/snps_files.RData")
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-sce[,sce$qual==PASS]
sce$qual
colData(sce)
sce
colData(sce)
coldata(sce)
library(SingleCellExperiment)
colData(sce)
colData(sce)<-NULL
colData(sce)
getwd()
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-sce[,sce$qual=="pass"]
colData(sce)<-NULL
sce
sce_sub<-sce[rowSums(counts(sce)>0)>16000,]
sce_sub
altExp(sce_sub,"ADT")<-NULL
sce_sub<-sce_sub[,1:2000]
save(sce_sub,file="sce.RData")
cells_by_snps<-cells_x_snps[,1:2000]
save(cells_by_snps,file="snps.RData")
save(vcf,file="vcf.RData")
sce
sce<-sce_sub
library(SNPcheck)
?add_snps
?sce
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce<-sce[,sce$qual=="pass"]
cells_x_snps<-cells_x_snps[,sce$qual=="pass"]
colData(sce)<-NULL
cells_x_snps
dim(cells_x_snps)
sce<-sce[,sce$qual=="pass"]
cells_x_snps<-cells_x_snps[,sce$qual=="pass"]
sce
load("C:/Users/michael.lynch/Documents/snps_files.RData")
sce
dim(cells_x_snps)
sce<-sce[,sce$qual=="pass"]
cells_x_snps<-cells_x_snps[,sce$qual=="pass"]
colData(sce)<-NULL
sce
dim(cells_x_snps)
cells_x_snps<-cells_x_snps[,sce$qual=="pass"]
dim(cells_x_snps)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
keep<-sce$qual=="pass"
sce<-sce[,sce$qual=="pass"]
cells_x_snps<-cells_x_snps[,sce$qual=="pass"]
dim(cells_x_snps)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
keep<-sce$qual=="pass"
sce<-sce[,keep]
cells_x_snps<-cells_x_snps[,keep]
colData(sce)<-NULL
dim(cells_x_snps)
sce_sub<-sce[rowSums(counts(sce)>0)>16000,]
sce_sub
altExp(sce_sub,"ADT")<-NULL
sce_sub<-sce_sub[,1:2000]
#save(sce_sub,file="sce.RData")
sce<-sce_sub
cells_by_snps<-cells_x_snps[,1:2000]
use_data(sce)
use_data(vcf)
snps<-cells_x_snps
dim(snps)
cells_by_snps<-cells_x_snps[,1:2000]
snps<-cells_by_snps
dim(snps)
use_data(snps)
use_data(sce)
use_data(snps)
sce
sce_sub<-sce[rowSums(counts(sce)>0)>14000,]
sce_sub
altExp(sce_sub,"ADT")<-NULL
sce_sub<-sce_sub[,1:2000]
#save(sce_sub,file="sce.RData")
sce<-sce_sub
sce
load("C:/Users/michael.lynch/Documents/snps_files.RData")
keep<-sce$qual=="pass"
sce<-sce[,keep]
cells_x_snps<-cells_x_snps[,keep]
colData(sce)<-NULL
sce_sub<-sce[rowSums(counts(sce)>0)>14000,]
sce_sub
altExp(sce_sub,"ADT")<-NULL
sce_sub<-sce_sub[,1:2000]
#save(sce_sub,file="sce.RData")
sce<-sce_sub
sce
use_data(sce)
load_all()
check()
BiocCheck::BiocCheck()
install(SNPcheck)
install()
library(SNPcheck)
?add_snps
?common_genes
?sce
?snps
browseVignettes("SNPcheck")
library(SNPcheck)
browseVignettes("SNPcheck")
devtools::install_github("michaelplynch/SNPcheck", build_vignettes = TRUE)
detach("package:SNPcheck", unload = TRUE)
devtools::install_github("michaelplynch/SNPcheck", build_vignettes = TRUE)
browseVignettes("SNPcheck")
browseVignettes("SNPcheck")
BiocCheck::BiocCheck()
file.path(R.home("share)", "licenses", "license.db"))
file.path(R.home("share)", "licenses", "license.db"))
sce
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
#  %\VignetteEncoding{UTF-8}
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
library(dittoSeq)
library(ggpubr)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
# load("../Data/sce.rda")
# load("../Data/snps.rda")
# load("../Data/vcf.rda")
sce<-sce
vcf<-vcf
snps<-snps
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
#  %\VignetteEncoding{UTF-8}
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
library(dittoSeq)
library(ggpubr)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
# load("../Data/sce.rda")
# load("../Data/snps.rda")
# load("../Data/vcf.rda")
sce<-sce
vcf<-vcf
snps<-snps
htos<-as.data.frame(t(logcounts(altExp(sce,"HTO"))))
x1<-gghistogram(htos,x="Hashtag1",fill =dittoColors(1)[1],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x2<-gghistogram(htos,x="Hashtag2",fill =dittoColors(1)[2],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x3<-gghistogram(htos,x="Hashtag3",fill =dittoColors(1)[3],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x4<-gghistogram(htos,x="Hashtag4",fill =dittoColors(1)[4],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x5<-gghistogram(htos,x="Hashtag5",fill =dittoColors(1)[5],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x6<-gghistogram(htos,x="Hashtag6",fill =dittoColors(1)[6],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
ggarrange(x1,x2,x3,x4,x5,x6,align="hv",ncol=3,nrow=2)
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
altExp(sce,"SNP")
?add_snps
sce<-add_snps(sce,snps,thresh=0.95)
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
table(sce$knn)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
counts(altExp(sce,"SNP"))
dim(counts(altExp(sce,"SNP")))
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
test<-Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
draw(test)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
#  %\VignetteEncoding{UTF-8}
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
library(dittoSeq)
library(ggpubr)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
# load("../Data/sce.rda")
# load("../Data/snps.rda")
# load("../Data/vcf.rda")
sce<-sce
vcf<-vcf
snps<-snps
htos<-as.data.frame(t(logcounts(altExp(sce,"HTO"))))
x1<-gghistogram(htos,x="Hashtag1",fill =dittoColors(1)[1],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x2<-gghistogram(htos,x="Hashtag2",fill =dittoColors(1)[2],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x3<-gghistogram(htos,x="Hashtag3",fill =dittoColors(1)[3],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x4<-gghistogram(htos,x="Hashtag4",fill =dittoColors(1)[4],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x5<-gghistogram(htos,x="Hashtag5",fill =dittoColors(1)[5],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x6<-gghistogram(htos,x="Hashtag6",fill =dittoColors(1)[6],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
ggarrange(x1,x2,x3,x4,x5,x6,align="hv",ncol=3,nrow=2)
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps,thresh=0.95)
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
table(sce$knn)
test<-Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
draw(test)
seurat<-as.Seurat(sce)
library(Seurat)
seurat<-as.Seurat(sce)
altExp(sce,"SNP")<-NULL
seurat<-as.Seurat(sce)
seurat<-HTODemux(seurat)
library(DropletUtils)
hashedDrops(counts(altExp(sce,"SNP")))
hashedDrops(counts(altExp(sce,"HTO")))
res<-hashedDrops(counts(altExp(sce,"HTO")))
res$Confident
res$Best
table(seurat$hash.ID,res$Best)
test<-as.factor(seurat$hash.ID)
levels(test)
test<-factor(seurat$hash.ID)
levels(test)
test<-factor(as.character(seurat$hash.ID))
levels(test)
seurat<-as.Seurat(sce)
seurat<-HTODemux(seurat)
seurat$hash.ID<-factor(as.character(seurat$hash.ID))
library(DropletUtils)
res<-hashedDrops(counts(altExp(sce,"HTO")))
table(seurat$hash.ID,res$Best)
res$Total
sce$seurat<-seurat$hash.ID
test<-Heatmap(counts(altExp(sce,"SNP")),column_split=sce$seurat,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
sce
sce<-add_snps(sce,snps,thresh=0.95)
altExp(sce,"SNP")
test<-Heatmap(counts(altExp(sce,"SNP")),column_split=sce$seurat,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
draw(test)
seurat<-as.Seurat(sce)
sce
altExp(sce,"SNP")<-NULL
use_data("sce")
use_data(sce)
sce
colData(sce)<-NULL
sce
use_data(sce)
sce
check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
#  %\VignetteEncoding{UTF-8}
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
library(dittoSeq)
library(ggpubr)
library(Seurat)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
# load("../Data/sce.rda")
# load("../Data/snps.rda")
# load("../Data/vcf.rda")
sce<-sce
vcf<-vcf
snps<-snps
htos<-as.data.frame(t(logcounts(altExp(sce,"HTO"))))
x1<-gghistogram(htos,x="Hashtag1",fill =dittoColors(1)[1],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x2<-gghistogram(htos,x="Hashtag2",fill =dittoColors(1)[2],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x3<-gghistogram(htos,x="Hashtag3",fill =dittoColors(1)[3],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x4<-gghistogram(htos,x="Hashtag4",fill =dittoColors(1)[4],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x5<-gghistogram(htos,x="Hashtag5",fill =dittoColors(1)[5],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
x6<-gghistogram(htos,x="Hashtag6",fill =dittoColors(1)[6],palette = "lancet",xlim=c(0,7),ylim=c(0,1000),alpha=1)
ggarrange(x1,x2,x3,x4,x5,x6,align="hv",ncol=3,nrow=2)
seurat<-as.Seurat(sce)
sce
sce$ident<-rep("SNPcheck",2000)
seurat<-as.Seurat(sce)
load_all()
sce
sce$project<-rep("SNPcheck",2000)
sce$ident<-NULL
use_data(sce)
load_all()
check()
library(DropletUtils)
sce
BiocCheck::BiocCheck()
sessionINfo()
sessionInfo()
BiocCheck::BiocCheck()
seq_len(1,3)
seq_len(2)
BiocCheck::BiocCheck()
CHECK()
check()
BiocCheck::BiocCheck()
use_package("DropletUtils")
