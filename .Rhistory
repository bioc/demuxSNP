library(SingleCellExperiment)
sce<-sce
vcf<-vcf
snps<-cells_by_snps
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,sce,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
table(sce$knn)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
Heatmap(counts(altExp(sce[,sce$seurat=="Negative"],"SNP")),column_split=sce$knn[sce$seurat=="Negative"],cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,row_title = "SNPs",col=colors)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
sce<-sce
vcf<-vcf
snps<-cells_by_snps
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,sce,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
table(sce$knn)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
Heatmap(counts(altExp(sce[,sce$seurat=="Negative"],"SNP")),column_split=sce$knn[sce$seurat=="Negative"],cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,row_title = "SNPs",col=colors)
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
sce<-sce
vcf<-vcf
snps<-cells_by_snps
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,sce,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
altExp(sce,"SNP")
sce<-reassign(sce,k=5)
table(sce$knn)
colors = structure(viridis(n=3), names = c("-1","0", "1"))
Heatmap(counts(altExp(sce[,sce$seurat=="Negative"],"SNP")),column_split=sce$knn[sce$seurat=="Negative"],cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,column_names_rot = 45,column_title_rot = -45,row_title = "SNPs",col=colors)
Heatmap(counts(altExp(sce,"SNP")),column_split=sce$knn,cluster_rows=FALSE,show_column_names = FALSE,cluster_column_slices = FALSE,row_title = "SNPs",col=colors)
check()
check()
load_all()
check()
vcf
library(SNPcheck)
vcf
vcf<-vcf
vcf[1]
test<-vcf
test[1]
test2<-test[1:3]
test2
writeVcf(test2)
writeVcf(test2,'t.vcf')
getwd()
check()
library(devtools)
load_all()
check()
vcf
test<-vcf
writeVcf(vcf,"full.vcf")
head(rowRanges((test)))
rr<-rowRanges(vcf)
head(rr)
head(seqnames(test))
"chr6 %in% head(seqnames(test))
"chr6" %in% head(seqnames(test))
head(seqnames(test)) %in% chr6
head(seqnames(test)) %in% 'chr6'
chrom6<-test[seqnames(test) %in% 'chr6']
chrom6
writeVcf(chrom6,"chr6.vcf")
getwd()
load_all()
sce
sce<-sce
top_genes<-common_genes(sce)
vcf<-vcf
subset_vcf(vcf,sce,top_genes)
vcf<-vcf
vcf
subset_vcf(vcf,sce,top_genes = )
subset_vcf(vcf,sce,top_genes = top_genes)
top_genes
subset_vcf(vcf,sce,top_genes = top_genes)
subset_vcf(my_vcf=vcf,sce,top_genes = top_genes)
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
sce<-sce
vcf<-vcf
snps<-cells_by_snps
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,sce,top_genes = top_genes)
load("C:/Users/michael.lynch/Documents/snps_files.RData")
top_genes<-common_genes(sce)
subset_vcf(vcf,sce,top_genes)
my_vcf<-VariantAnnotation::readVcf(full.vcf,"GRCh38")
my_vcf<-VariantAnnotation::readVcf('full.vcf',"GRCh38")
my_vcf
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges<-gns[gns$gene_name %in% names(top_genes)]
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]
top_genes_vcf
top_gene_ranges
names(top_genes)
top_genes
top_gene_ranges<-gns[gns$gene_name %in% top_genes]
top_gene_ranges
subset_vcf(vcf,sce,top_genes)
load_all()
subset_vcf(vcf,sce,top_genes)
load_all()
subset_vcf(vcf,sce,top_genes)
subset_vcf(vcf,sce,top_genes)
subset_vcf(my_vcf=vcf,sce,top_genes)
test<-vcf
test
subset_vcf(test,sce,top_genes)
my_vcf<-vcf
#my_vcf<-VariantAnnotation::readVcf('full.vcf',"GRCh38")
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges<-gns[gns$gene_name %in% top_genes]
top_gene_ranges
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]
top_genes_vcf
overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")
sum(overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within"))
sum(SNP_ranges_inbound %within% top_gene_ranges)
knitr::opts_chunk$set(echo = TRUE, engine.path="C:/Windows/System32/bash.exe")
library(Seurat)
library(VariantAnnotation)
library(EnsDb.Hsapiens.v86)
library(Matrix)
data.dir="D:/Culhane_Lab Dropbox/Shared_Lab_Folder/broad_datasets/KW9275_Yufei/210827_10X_KW9275_bcl/cellranger-6.1.1/GRCh38/BRI-1348/outs/filtered_feature_bc_matrix"
broad<-Read10X(
data.dir,
gene.column = 2,
cell.column = 1,
unique.features = TRUE,
strip.suffix = FALSE
)
data.dir="C:/Users/michael.lynch/Culhane_Lab Dropbox/Shared_Lab_Folder/broad_datasets/KW9275_Yufei/210827_10X_KW9275_bcl/cellranger-6.1.1/GRCh38/BRI-1348/outs/filtered_feature_bc_matrix"
broad<-Read10X(
data.dir,
gene.column = 2,
cell.column = 1,
unique.features = TRUE,
strip.suffix = FALSE
)
broad.seurat<-CreateSeuratObject(broad$`Gene Expression`)
myvcf<-readVcf("./Data/common_variants/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf","GRCh38")
broad.counts<-broad.seurat[["RNA"]]@counts
dim(broad.counts)
broad.counts.bool<-broad.counts>0
# count amount of cells which express each gene
cellspergene<-rowSums(broad.counts.bool)
# count proportions of cells which express each gene
prop_cells<-rowSums(broad.counts.bool)/ncol(broad.counts.bool)
#hist(cellspergene)
#hist(prop_cells)
sum(cellspergene>20000)
sorted_topgenes<-sort(cellspergene,decreasing=TRUE)
sorted_topgenes[1:50]
plot(sorted_topgenes[1:100])
RR<-rowRanges(myvcf)
#number of inbounds and out of bounds SNPs
sum(end(RR)<seqlengths(RR)[as.character(seqnames(RR))])
sum(end(RR)>seqlengths(RR)[as.character(seqnames(RR))])
# Out of bounds indices
OOB<-myvcf[end(RR)>seqlengths(RR)[as.character(seqnames(RR))]]
# in bounds subsetting
IB<-myvcf[end(RR)<=seqlengths(RR)[as.character(seqnames(RR))]]
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
# gene locations subsetted by top genes
top_gene_ranges<-gns[mcols(gns)$gene_name %in% names(sorted_topgenes[1:100])]
top_gene_ranges
sce<-sce
vcf<-vcf
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf<-vcf
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges2<-gns[gns$gene_name %in% top_genes]
top_genes<-common_genes(sce)
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges2<-gns[gns$gene_name %in% top_genes]
top_gene_ranges
top_gene_ranges2
top_gene_ranges==top_gene_ranges2
top_gene_ranges
head(top_gene_ranges)
head(top_gene_ranges2)
top_gene_ranges$gene_id==top_gene_ranges2$gene_id
length(top_gene_ranges)
length(top_gene_ranges22)
length(top_gene_ranges2)
t2<-common_genes(sce)
sorted_topgenes[1:100]
intersect(t2,sorted_topgenes[1:100])
t2
as.top_genes
top_genes
names(sorted_topgenes[1:100])
intersect(t2,names(sorted_topgenes[1:100]))
load_all()
t3<-common_genes(sce)
intersect(t3,t2)
subset_vcf(vcf,sce,t3)
top_genes<-common_genes(sce = sce)
load_all()
top_genes<-common_genes(sce)
subset_vcf(vcf,sce,top_genes)
sce<-sce
vcf<-vcf
#my_vcf<-VariantAnnotation::readVcf('full.vcf',"GRCh38")
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf<-vcf
top_genes<-common_genes(sce)
#my_vcf<-VariantAnnotation::readVcf('full.vcf',"GRCh38")
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
SNP_ranges
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
SNP_ranges_inbound
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
gns
top_gene_ranges<-gns[gns$gene_name %in% top_genes]
top_gene_ranges
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")
sum(overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within"))
myvcf<-readVcf("./Data/common_variants/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf","GRCh38")
RR<-rowRanges(myvcf)
#number of inbounds and out of bounds SNPs
sum(end(RR)<seqlengths(RR)[as.character(seqnames(RR))])
sum(end(RR)>seqlengths(RR)[as.character(seqnames(RR))])
# Out of bounds indices
OOB<-myvcf[end(RR)>seqlengths(RR)[as.character(seqnames(RR))]]
# in bounds subsetting
IB<-myvcf[end(RR)<=seqlengths(RR)[as.character(seqnames(RR))]]
my_vcf_inbound
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
# gene locations subsetted by top genes
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
# set seqlength for both to NA to as they differ
seqlengths(RR_IB)<-NA
seqlengths(top_gene_ranges)<-NA
# subset snps file to those within ranges of top genes
SNPs_from_top_genes<-IB[RR_IB %within% top_gene_ranges]
SNPs_from_top_genes
?`mcols<-,VCF,ANY-method`
?mcol
?mcols
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]
top_genes_vcf
# row ranges of in bounds snps
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
# gene locations subsetted by top genes
top_gene_ranges2<-gns[mcols(gns)$gene_name %in% top_genes]
# set seqlength for both to NA to as they differ
seqlengths(RR_IB)<-NA
seqlengths(top_gene_ranges)<-NA
# subset snps file to those within ranges of top genes
SNPs_from_top_genes<-IB[RR_IB %within% top_gene_ranges]
# write to vcf file
writeVcf(SNPs_from_top_genes,'./Data/common_variants/SNPs_from_common_genes.vcf')
SNP_ranges_inbound
library(devtools)
load_all()
subset_vcf(vcf,sce,top_genes)
# row ranges of in bounds snps
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
# gene locations subsetted by top genes
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
# set seqlength for both to NA to as they differ
seqlengths(RR_IB)<-NA
seqlengths(top_gene_ranges)<-NA
# subset snps file to those within ranges of top genes
SNPs_from_top_genes<-IB[RR_IB %within% top_gene_ranges]
# write to vcf file
writeVcf(SNPs_from_top_genes,'./Data/common_variants/SNPs_from_common_genes.vcf')
SNPs_from_top_genes
top_genes_vcf<-my_vcf_inbound[IRanges::overlapsAny(SNP_ranges_inbound, top_gene_ranges,type="within")]
top_genes_vcf
top_genes_vcf<-my_vcf_inbound[SNP_ranges_inbound %within% top_gene_ranges]
top_genes_vcf
top_genes_vcf<-IB[SNP_ranges_inbound %within% top_gene_ranges]
top_genes_vcf
RR_IB
SNP_ranges_inbound
top_genes_vcf<-IB[RR_IB %within% top_gene_ranges]
top_genes_vcf
?rowRanges
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
library(VariantAnnotation)
?rowRanges
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
top_genes_vcf<-IB[SNP_ranges_inbound %within% top_gene_ranges]
top_genes_vcf<-IB[SNP_ranges_inbound %within% top_gene_ranges]
my_vcf<-vcf
library(devtools)
load_all
load_all()
sce<-sce
my_vcf<-vcf
top_genes<-common_genes(sce)
getwd()
subset_vcf(my_vcf,sce,top_genes)
library(VariantAnnotation)
load_all()
subset_vcf(my_vcf,sce,top_genes)
knitr::opts_chunk$set(echo = TRUE, engine.path="C:/Windows/System32/bash.exe")
RR<-rowRanges(my_vcf)
#number of inbounds and out of bounds SNPs
sum(end(RR)<seqlengths(RR)[as.character(seqnames(RR))])
sum(end(RR)>seqlengths(RR)[as.character(seqnames(RR))])
# Out of bounds indices
OOB<-myvcf[end(RR)>seqlengths(RR)[as.character(seqnames(RR))]]
myvcf<-my_vcf
RR<-rowRanges(myvcf)
#number of inbounds and out of bounds SNPs
sum(end(RR)<seqlengths(RR)[as.character(seqnames(RR))])
sum(end(RR)>seqlengths(RR)[as.character(seqnames(RR))])
# Out of bounds indices
OOB<-myvcf[end(RR)>seqlengths(RR)[as.character(seqnames(RR))]]
# in bounds subsetting
IB<-myvcf[end(RR)<=seqlengths(RR)[as.character(seqnames(RR))]]
# row ranges of in bounds snps
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
?genes
library(Seurat)
library(VariantAnnotation)
library(EnsDb.Hsapiens.v86)
library(Matrix)
# row ranges of in bounds snps
RR_IB<-rowRanges(IB)
# gene locations from ensdb grch38 version
gns <- genes(EnsDb.Hsapiens.v86)
# gene locations subsetted by top genes
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
# set seqlength for both to NA to as they differ
seqlengths(RR_IB)<-NA
seqlengths(top_gene_ranges)<-NA
# subset snps file to those within ranges of top genes
SNPs_from_top_genes<-IB[RR_IB %within% top_gene_ranges]
SNPs_from_top_genes
# write to vcf file
writeVcf(SNPs_from_top_genes,'./Data/common_variants/SNPs_from_common_genes.vcf')
myvcf<-readVcf("./Data/common_variants/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf","GRCh38")
my_vcf
myvcf
my_vcf[1:5]
head(rowRanges(myvcf))
top_gene_ranges
myvcf<-readVcf("./Data/common_variants/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf","GRCh38")
a<-1:10
a
b<-1:4
a %in% b | a[1:4]
a %in% b | c(1,2)
rowRanges(my_vcf)
my_vcf<-myvcf
rowRanges(my_vcf)
SNP_ranges<-SummarizedExperiment::rowRanges(my_vcf)
my_vcf_inbound<-my_vcf[BiocGenerics::end(SNP_ranges)<=GenomeInfoDb::seqlengths(SNP_ranges)[as.character(GenomeInfoDb::seqnames(SNP_ranges))]]
SNP_ranges_inbound<-SummarizedExperiment::rowRanges(my_vcf_inbound)
gns <- ensembldb::genes(EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86)
top_gene_ranges<-gns[mcols(gns)$gene_name %in% top_genes]
GenomeInfoDb::seqlengths(SNP_ranges_inbound)<-NA
GenomeInfoDb::seqlengths(top_gene_ranges)<-NA
logi<-SNP_ranges_inbound %within% top_gene_ranges
?sample
sample(1:7000000,100)
sample(1:7000000,10000)
logi2<-logi[sample(1:7000000,10000)]<-TRUE
sum(logi2)
logi[sample(1:7000000,10000)]<-TRUE
sum(logi)
logi<-SNP_ranges_inbound %within% top_gene_ranges
sum(logi)
logi[sample(1:7000000,10000)]<-TRUE
sum(logi)
vcf_sub<-my_vcf_inbound[logi]
vcf_sub
writeVcf(vcf_sub,"vcf_sub.vcf")
load_all()
top_genes<-common_genes(sce)
subset_vcf(vcf_sub,sce,top_genes)
vcf<-vcf_sub
use_data(vcf)
check()
use_gpl3_license()
check()
check()
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
install()
vignette(SNPcheck)
?vignette
vignette("SNPcheck")
vignette(package="SNPcheck")
library(SNPcheck)
vignette(package="SNPcheck")
?build
build()
load_all()
library(SNPcheck)
library(ComplexHeatmap)
library(viridisLite)
library(SingleCellExperiment)
sce<-sce
vcf<-vcf
snps<-cells_by_snps
getwd()
build()
build()
build()
build()
build()
sce<-add_snps(sce,snps)
load("../Data/sce.rda")
load("../Data/cells_x_snps.rda")
load("../Data/vcf.rda")
snps<-cells_x_snps
top_genes<-common_genes(sce = sce)
subset_vcf(vcf,sce,top_genes = top_genes)
sce<-consensus_calls(sce)
sce<-add_snps(sce,snps)
sce
sce<-add_snps(sce,cells_x_snps)
mat<-cells_x_snps
mat_obs<-mat[(rowSums(mat>0)/dim(mat)[2]) > thresh,]
thresh=0.8
mat_obs<-mat[(rowSums(mat>0)/dim(mat)[2]) > thresh,]
mat_obs[mat_obs==0]<-c(0)
mat_obs[mat_obs==1]<-c(-1)
mat_obs[mat_obs==2]<-1
mat_obs[mat_obs==3]<-1
se<-SingleCellExperiment::SingleCellExperiment(list(counts=mat_obs))
colnames(se)<-colnames(sce)
colnames(sce)
dim(cells_x_snps)
library(devtools)
load_all()
snps<-cels_x_snps
snps<-cells_x_snps
library(SNPcheck)
sce
getwd()
load_all()
sce
